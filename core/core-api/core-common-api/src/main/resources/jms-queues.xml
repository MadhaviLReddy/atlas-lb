<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">
    <!--<import resource="db-services.xml"/>-->
    <!--<import resource="db-usage-services.xml"/>-->


    <!--JMS SETTINGS-->
    <bean id="jmsActiveMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${activemq_broker_uri}"/>
    </bean>

    <bean id="jmsPooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
        <property name="maxConnections" value="${jms.pool.max.connections}"/>
        <property name="maximumActive" value="${jms.pool.max.active.connections}"/>
        <property name="connectionFactory" ref="jmsActiveMQConnectionFactory"/>
    </bean>
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate" scope="singleton">
        <property name="receiveTimeout" value="${jms.template.receive.timeout}"/>
        <property name="sessionTransacted" value="true"/>
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
    </bean>


<!--    <bean id="baseListener" class="org.openstack.atlas.api.async.BaseListener" abstract="true">
        <property name="jmsTemplate" ref="jmsTemplate"/>
    </bean>
    
    <bean id="createLoadBalancerListener"
          class="org.openstack.atlas.api.async.CreateLoadBalancerListener"
          parent="baseListener"/>

    <bean id="createLoadBalancerListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="createLoadBalancerListener"/>
        <property name="destinationName" value="CREATE_LOADBALANCER"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="updateLoadBalancerListener"
          class="org.openstack.atlas.api.async.CreateLoadBalancerListener"
          parent="baseListener"/>

    <bean id="updateLoadBalancerListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="updateLoadBalancerListener"/>
        <property name="destinationName" value="UPDATE_LOADBALANCER"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>-->

     <bean id="updateLoadBalancerListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="updateLoadBalancerListener"/>
        <property name="destinationName" value="UPDATE_LOADBALANCER"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

     <bean id="createLoadBalancerListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsPooledConnectionFactory"/>
        <property name="messageListener" ref="createLoadBalancerListener"/>
        <property name="destinationName" value="CREATE_LOADBALANCER"/>
        <property name="concurrentConsumers" value="${lbass.default.concurrent.consumers}"/>
        <property name="maxConcurrentConsumers" value="${lbaas.default.max.concurrent.consumers}"/>
        <property name="receiveTimeout" value="${lbaas.default.receive.timeout}"/>
        <property name="idleTaskExecutionLimit" value="${lbaas.default.idle.task.execution.limit}"/>
        <property name="idleConsumerLimit" value="${lbaas.default.idle.consumer.limit}"/>
        <property name="sessionTransacted" value="true"/>
    </bean>
</beans>
