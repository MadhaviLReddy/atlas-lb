<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import resource="lb-jpa-persistence.xml"/>
    <import resource="usage-jpa-persistence.xml"/>

    <bean id="reverseProxyLoadBalancerAdapter"
          class="org.openstack.atlas.adapter.zxtm.ZxtmAdapterImpl"/>
    <bean id="reverseProxyLoadBalancerService"
          class="org.openstack.atlas.api.integration.ReverseProxyLoadBalancerServiceImpl"/>

    <!--ENABLED TRIGGERS-->
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="lbUsagePollerTrigger"/>
                <ref bean="lbUsageRollupJobTrigger"/>
                <ref bean="accountUsagePollerTrigger"/>
                <ref bean="hostUsagePollerTrigger"/>
                <ref bean="suspendedEventJobTrigger"/>
                <ref bean="rateLimitDeletionJobTrigger"/>
                <ref bean="lbDeletionJobTrigger"/>
                <ref bean="dailyDeletionJobTrigger"/>
                <ref bean="eventsDeletionJobTrigger"/>
                <ref bean="atomAlertDeletionJobTrigger"/>
                <ref bean="hostEndpointPollerJobTrigger"/>
            </list>
        </property>
        <!-- Scheduler context key we use this in delegating job bean -->
        <property name="applicationContextSchedulerContextKey" value="applicationContext"/>
    </bean>

    <!--LOADBALANCER USAGE POLLER CONFIG-->
    <bean id="lbUsagePollerBean" class="org.openstack.atlas.usage.jobs.LoadBalancerUsagePoller"
          autowire="byName"/>
    <bean name="lbUsagePoller" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass" value="org.openstack.atlas.jobs.DelegatingJobBean"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="job.bean.name" value="lbUsagePollerBean"/>
            </map>
        </property>
    </bean>
    <bean id="lbUsagePollerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="lbUsagePoller"/>
        <property name="cronExpression" value="${lb-usage-poller.interval}"/>
    </bean>

    <!--USAGE ROLLUP CONFIG-->
    <bean id="lbUsageRollupJobBean" class="org.openstack.atlas.usage.jobs.LoadBalancerUsageRollupJob"
          autowire="byName"/>
    <bean name="lbUsageRollupJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass" value="org.openstack.atlas.jobs.DelegatingJobBean"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="job.bean.name" value="lbUsageRollupJobBean"/>
            </map>
        </property>
    </bean>
    <bean id="lbUsageRollupJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="lbUsageRollupJob"/>
        <property name="cronExpression" value="${lb-usage-rollup-job.interval}"/>
    </bean>

    <!--ACCOUNT USAGE POLLER CONFIG-->
    <bean name="accountUsagePoller" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass"
                  value="org.openstack.atlas.usage.jobs.AccountUsagePoller"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="loadBalancerRepository" value-ref="loadBalancerRepository"/>
                <entry key="accountUsageRepository" value-ref="accountUsageRepository"/>
                <entry key="virtualIpRepository" value-ref="virtualIpRepository"/>
                <entry key="alertRepository" value-ref="alertRepository"/>
                <entry key="jobStateService" value-ref="jobStateService"/>
            </map>
        </property>
    </bean>
    <bean id="accountUsagePollerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="accountUsagePoller"/>
        <property name="cronExpression" value="${account-usage-poller.interval}"/>
    </bean>

    <!--HOST USAGE POLLER CONFIG-->
    <bean name="hostUsagePoller" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass"
                  value="org.openstack.atlas.usage.jobs.HostUsagePoller"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="reverseProxyLoadBalancerAdapter" value-ref="reverseProxyLoadBalancerAdapter"/>
                <entry key="hostRepository" value-ref="hostRepository"/>
                <entry key="hostUsageRepository" value-ref="hostUsageRepository"/>
                <entry key="alertRepository" value-ref="alertRepository"/>
                <entry key="jobStateService" value-ref="jobStateService"/>
            </map>
        </property>
    </bean>
    <bean id="hostUsagePollerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="hostUsagePoller"/>
        <property name="cronExpression" value="${host-usage-poller.interval}"/>
    </bean>

    <!--SUSPENDED EVENT JOB CONFIG-->
    <bean id="suspendedEventJobBean" class="org.openstack.atlas.usage.jobs.SuspendedEventJob" autowire="byName"/>
    <bean name="suspendedEventJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass" value="org.openstack.atlas.jobs.DelegatingJobBean"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="job.bean.name" value="suspendedEventJobBean"/>
            </map>
        </property>
    </bean>
    <bean id="suspendedEventJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="suspendedEventJob"/>
        <property name="cronExpression" value="${suspended-event-job.interval}"/>
    </bean>

    <!--USAGE DELETION JOB CONFIG-->
    <bean name="dailyDeletionJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass"
                  value="org.openstack.atlas.jobs.DailyDeletionJob"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="hourlyUsageRepository" value-ref="hourlyUsageRepository"/>
                <entry key="hostUsageRepository" value-ref="hostUsageRepository"/>
                <entry key="alertRepository" value-ref="alertRepository"/>
                <entry key="jobStateService" value-ref="jobStateService"/>
            </map>
        </property>
    </bean>
    <bean id="dailyDeletionJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="dailyDeletionJob"/>
        <property name="cronExpression" value="${daily-deletion-job.interval}"/>
    </bean>

    <!--RATE LIMIT DELETION JOB CONFIG-->
    <bean name="rateLimitDeletionJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass"
                  value="org.openstack.atlas.jobs.RateLimitDeletionJob"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="reverseProxyLoadBalancerAdapter" value-ref="reverseProxyLoadBalancerAdapter"/>
                <entry key="loadBalancerRepository" value-ref="loadBalancerRepository"/>
                <entry key="hostRepository" value-ref="hostRepository"/>
                <entry key="alertRepository" value-ref="alertRepository"/>
                <entry key="jobStateService" value-ref="jobStateService"/>
            </map>
        </property>
    </bean>
    <bean id="rateLimitDeletionJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="rateLimitDeletionJob"/>
        <property name="cronExpression" value="${rate-limit-deletion-job.interval}"/>
    </bean>

    <!--HOST ENDPOINT POLLER JOB CONFIG-->
    <bean name="hostEndpointPollerJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass"
                  value="org.openstack.atlas.jobs.HostEndpointPollerJob"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="reverseProxyLoadBalancerService" value-ref="reverseProxyLoadBalancerService"/>
                <entry key="reverseProxyLoadBalancerAdapter" value-ref="reverseProxyLoadBalancerAdapter"/>
                <entry key="hostRepository" value-ref="hostRepository"/>
                <entry key="alertRepository" value-ref="alertRepository"/>
                <entry key="jobStateService" value-ref="jobStateService"/>
            </map>
        </property>
    </bean>
    <bean id="hostEndpointPollerJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="hostEndpointPollerJob"/>
        <property name="cronExpression" value="${host-endpoint-poller.interval}"/>
    </bean>

    <!--ALERT DELETION JOB CONFIG-->
    <bean name="atomAlertDeletionJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass" value="org.openstack.atlas.jobs.AlertDeletionJob"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="alertRepository" value-ref="alertRepository"/>
                <entry key="jobStateService" value-ref="jobStateService"/>
            </map>
        </property>
    </bean>
    <bean id="atomAlertDeletionJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="atomAlertDeletionJob"/>
        <property name="cronExpression" value="${alert-deletion-job.interval}"/>
    </bean>

    <!--EVENTS DELETION JOB CONFIG-->
    <bean name="eventsDeletionJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass"
                  value="org.openstack.atlas.jobs.EventsDeletionJob"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="loadBalancerEventRepository" value-ref="loadBalancerEventRepository"/>
                <entry key="alertRepository" value-ref="alertRepository"/>
                <entry key="jobStateService" value-ref="jobStateService"/>
            </map>
        </property>
    </bean>
    <bean id="eventsDeletionJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="eventsDeletionJob"/>
        <property name="cronExpression" value="${events-deletion-job.interval}"/>
    </bean>

    <!--LB DELETION JOB CONFIG-->
    <bean name="lbDeletionJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass"
                  value="org.openstack.atlas.jobs.LoadBalancerDeletionJob"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="reverseProxyLoadBalancerAdapter" value-ref="reverseProxyLoadBalancerAdapter"/>
                <entry key="loadBalancerRepository" value-ref="loadBalancerRepository"/>
                <entry key="sslTerminationRepository" value-ref="sslTerminationRepository"/>
                <entry key="hostRepository" value-ref="hostRepository"/>
                <entry key="alertRepository" value-ref="alertRepository"/>
                <entry key="jobStateService" value-ref="jobStateService"/>
            </map>
        </property>
    </bean>
    <bean id="lbDeletionJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="lbDeletionJob"/>
        <property name="cronExpression" value="${lb-deletion-job.interval}"/>
    </bean>

</beans>
