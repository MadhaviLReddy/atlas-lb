//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.07.31 at 01:53:34 AM CDT 
//


package com.rackspace.docs.core.event;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DC.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DC"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="GLOBAL"/&gt;
 *     &lt;enumeration value="DFW1"/&gt;
 *     &lt;enumeration value="DFW2"/&gt;
 *     &lt;enumeration value="DFW3"/&gt;
 *     &lt;enumeration value="HKG1"/&gt;
 *     &lt;enumeration value="IAD1"/&gt;
 *     &lt;enumeration value="IAD2"/&gt;
 *     &lt;enumeration value="IAD3"/&gt;
 *     &lt;enumeration value="LON1"/&gt;
 *     &lt;enumeration value="LON3"/&gt;
 *     &lt;enumeration value="ORD1"/&gt;
 *     &lt;enumeration value="SYD2"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "DC")
@XmlEnum
public enum DC {

    GLOBAL("GLOBAL"),
    @XmlEnumValue("DFW1")
    DFW_1("DFW1"),
    @XmlEnumValue("DFW2")
    DFW_2("DFW2"),
    @XmlEnumValue("DFW3")
    DFW_3("DFW3"),
    @XmlEnumValue("HKG1")
    HKG_1("HKG1"),
    @XmlEnumValue("IAD1")
    IAD_1("IAD1"),
    @XmlEnumValue("IAD2")
    IAD_2("IAD2"),
    @XmlEnumValue("IAD3")
    IAD_3("IAD3"),
    @XmlEnumValue("LON1")
    LON_1("LON1"),
    @XmlEnumValue("LON3")
    LON_3("LON3"),
    @XmlEnumValue("ORD1")
    ORD_1("ORD1"),
    @XmlEnumValue("SYD2")
    SYD_2("SYD2");
    private final String value;

    DC(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DC fromValue(String v) {
        for (DC c: DC.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
